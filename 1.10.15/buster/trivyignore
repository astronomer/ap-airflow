# Only used in the dev pipeline, not at runtime
# lodash
NSWG-ECO-516

# lodash: Prototype pollution in utilities function fixed in >=4.17.11
CVE-2020-8203
CVE-2019-10744
CVE-2018-16487

# eslint-utils
CVE-2019-15657

# handlebars
CVE-2019-19919

# mixin-deep
CVE-2019-10746

# nodejs-set-value
CVE-2019-10747

# only applies to running psql interactively -- low risk for us
CVE-2020-25696

# dev sub dependencies(#2708)
CVE-2021-27290

#pollution vulnerability
CVE-2020-7774

# False Positive - We are using PyYaml version that is not vulnerable
# and Kubernetes Python client is already using safe_load
# Details: https://github.com/astronomer/issues-airflow/issues/39
CVE-2020-1747

# Airflow 1.10.15 only supports Celery 4,
# so we cannot upgrade to Celery 5.2.2+ to fix this.
# In addition, this does require manipulation in the celery
# backend.
# Snyk also lists this as medium (contrary to the CVE):
# https://security.snyk.io/vuln/SNYK-PYTHON-CELERY-2314953
CVE-2021-23727

# Airflow 1.10.15 is on FAB 2.x, not FAB 3.x
# We also don't have any FAB REST endpoints that
# are of any interest, and our auth process provides
# additional protection on top of it. Low risk for us.
CVE-2021-41265

# Updating urllib3 isn't easy because of its dependency chain:
#   requests -> snowflake, and botocore
# In addition, this DOS vulnerability can really only cause
# service disruption, so the risk is greater to do the upgrade
CVE-2021-33503
