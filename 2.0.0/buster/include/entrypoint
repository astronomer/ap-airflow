#!/usr/bin/env bash
set -e

if [[ $UID == "${ASTRONOMER_UID:-1000}" ]]; then
  # Since we need to support running tini as another user, we can't put tini in
  # the ENTRYPOINT command, we have to run it here, if we haven't already
  if [[ -z "$__TINIFIED" ]]; then
    __TINIFIED=1 exec tini -- "$0" "$@"
  fi
else
  __TINIFIED=1 exec gosu "${ASTRONOMER_USER}" tini -- "$0" "$@"
fi

if [[ -n "$EXECUTOR" && -z "$AIRFLOW__CORE__EXECUTOR" ]]; then
  # Support for puckle style of defining configs
  export AIRFLOW__CORE__EXECUTOR "${EXECUTOR}Executor"
fi

# Airflow subcommand
CMD=$2

url_parse_regex="[^:]+://([^@/]*@)?([^/:]*):?([0-9]*)/?"

# Wait for postgres then init the db
if [[ -n $AIRFLOW__CORE__SQL_ALCHEMY_CONN  ]]; then
  # Wait for database port to open up
  [[ ${AIRFLOW__CORE__SQL_ALCHEMY_CONN} =~ $url_parse_regex ]]
  HOST=${BASH_REMATCH[2]}
  PORT=${BASH_REMATCH[3]}
  echo "Waiting for host: ${HOST} ${PORT}"
  while ! nc -w 1 -z "${HOST}" "${PORT}"; do
    sleep 0.001
  done
fi

if [[ -n $AIRFLOW__CELERY__BROKER_URL ]] && [[ $CMD =~ ^(scheduler|celery worker|celery flower)$ ]]; then
  # Wait for database port to open up
  [[ ${AIRFLOW__CELERY__BROKER_URL} =~ $url_parse_regex ]]
  HOST=${BASH_REMATCH[2]}
  PORT=${BASH_REMATCH[3]}
  echo "Waiting for host: ${HOST} ${PORT}"
  while ! nc -w 1 -z "${HOST}" "${PORT}"; do
    sleep 0.001
  done
fi

# Run the original command
exec "$@"
